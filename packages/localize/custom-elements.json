{
  "schemaVersion": "experimental",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "./index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "formatDate",
          "declaration": {
            "name": "formatDate",
            "module": "./src/date/formatDate.js"
          }
        },
        {
          "kind": "js",
          "name": "getDateFormatBasedOnLocale",
          "declaration": {
            "name": "getDateFormatBasedOnLocale",
            "module": "./src/date/getDateFormatBasedOnLocale.js"
          }
        },
        {
          "kind": "js",
          "name": "getMonthNames",
          "declaration": {
            "name": "getMonthNames",
            "module": "./src/date/getMonthNames.js"
          }
        },
        {
          "kind": "js",
          "name": "getWeekdayNames",
          "declaration": {
            "name": "getWeekdayNames",
            "module": "./src/date/getWeekdayNames.js"
          }
        },
        {
          "kind": "js",
          "name": "normalizeDateTime",
          "declaration": {
            "name": "normalizeDateTime",
            "module": "./src/date/normalizeDateTime.js"
          }
        },
        {
          "kind": "js",
          "name": "parseDate",
          "declaration": {
            "name": "parseDate",
            "module": "./src/date/parseDate.js"
          }
        },
        {
          "kind": "js",
          "name": "formatNumber",
          "declaration": {
            "name": "formatNumber",
            "module": "./src/number/formatNumber.js"
          }
        },
        {
          "kind": "js",
          "name": "formatNumberToParts",
          "declaration": {
            "name": "formatNumberToParts",
            "module": "./src/number/formatNumberToParts.js"
          }
        },
        {
          "kind": "js",
          "name": "getCurrencyName",
          "declaration": {
            "name": "getCurrencyName",
            "module": "./src/number/getCurrencyName.js"
          }
        },
        {
          "kind": "js",
          "name": "getDecimalSeparator",
          "declaration": {
            "name": "getDecimalSeparator",
            "module": "./src/number/getDecimalSeparator.js"
          }
        },
        {
          "kind": "js",
          "name": "getFractionDigits",
          "declaration": {
            "name": "getFractionDigits",
            "module": "./src/number/getFractionDigits.js"
          }
        },
        {
          "kind": "js",
          "name": "getGroupSeparator",
          "declaration": {
            "name": "getGroupSeparator",
            "module": "./src/number/getGroupSeparator.js"
          }
        },
        {
          "kind": "js",
          "name": "localize",
          "declaration": {
            "name": "localize",
            "module": "./src/localize.js"
          }
        },
        {
          "kind": "js",
          "name": "setLocalize",
          "declaration": {
            "name": "setLocalize",
            "module": "./src/localize.js"
          }
        },
        {
          "kind": "js",
          "name": "LocalizeManager",
          "declaration": {
            "name": "LocalizeManager",
            "module": "./src/LocalizeManager.js"
          }
        },
        {
          "kind": "js",
          "name": "LocalizeMixin",
          "declaration": {
            "name": "LocalizeMixin",
            "module": "./src/LocalizeMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "normalizeCurrencyLabel",
          "declaration": {
            "name": "normalizeCurrencyLabel",
            "module": "./src/number/normalizeCurrencyLabel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-helpers.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "fakeImport",
          "declaration": {
            "name": "fakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "resetFakeImport",
          "declaration": {
            "name": "resetFakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "setupEmptyFakeImportsFor",
          "declaration": {
            "name": "setupEmptyFakeImportsFor",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "setupFakeImport",
          "declaration": {
            "name": "setupFakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "localizeTearDown",
          "declaration": {
            "name": "localizeTearDown",
            "module": "./test-helpers/localizeTearDown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/all-locales.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/all-locales.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LocalizeManager.js",
      "declarations": [
        {
          "kind": "class",
          "name": "LocalizeManager",
          "events": [
            {
              "name": "localeChanged",
              "type": {
                "type": "CustomEvent"
              }
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_setupTranslationToolSupport",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "teardown",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "locale",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_setHtmlLangAttribute",
              "privacy": "public",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__handleLanguageOnly",
              "privacy": "public",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "loadingComplete",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "addData",
              "privacy": "public",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "type": "object"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setupNamespaceLoader",
              "privacy": "public",
              "parameters": [
                {
                  "name": "pattern",
                  "type": {
                    "type": "RegExp|string"
                  }
                },
                {
                  "name": "loader",
                  "type": {
                    "type": "function"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadNamespaces",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Promise.<Object>"
                }
              },
              "parameters": [
                {
                  "name": "namespaces",
                  "type": {
                    "type": "NamespaceObject[]"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "Object"
                  },
                  "optional": true
                },
                {
                  "name": "options.locale",
                  "type": {
                    "type": "string"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadNamespace",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Promise.<Object|void>"
                }
              },
              "parameters": [
                {
                  "name": "namespaceObj",
                  "type": {
                    "type": "NamespaceObject"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "Object"
                  },
                  "optional": true
                },
                {
                  "name": "options.locale",
                  "type": {
                    "type": "string"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "msg",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string"
                }
              },
              "parameters": [
                {
                  "name": "keys",
                  "type": {
                    "type": "string | string[]"
                  }
                },
                {
                  "name": "vars",
                  "type": {
                    "type": "Object.<string,?>"
                  },
                  "optional": true
                },
                {
                  "name": "opts",
                  "type": {
                    "type": "Object"
                  },
                  "optional": true,
                  "default": "{}"
                },
                {
                  "name": "opts.locale",
                  "type": {
                    "type": "string"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setupHtmlLangAttributeObserver",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_teardownHtmlLangAttributeObserver",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_isNamespaceInCache",
              "privacy": "public",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getCachedNamespaceLoaderPromise",
              "privacy": "public",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadNamespaceData",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Promise.<Object|void>"
                }
              },
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespaceObj",
                  "type": {
                    "type": "NamespaceObject"
                  }
                },
                {
                  "name": "isDynamicImport",
                  "type": {
                    "type": "boolean"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getNamespaceLoader",
              "privacy": "public",
              "parameters": [
                {
                  "name": "namespaceObj",
                  "type": {
                    "type": "NamespaceObject"
                  }
                },
                {
                  "name": "isDynamicImport",
                  "type": {
                    "type": "boolean"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getNamespaceLoaderPromise",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Promise.<any>"
                }
              },
              "parameters": [
                {
                  "name": "loader",
                  "type": {
                    "type": "function"
                  }
                },
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "fallbackLocale",
                  "type": {
                    "type": "string"
                  },
                  "optional": true,
                  "default": "this._fallbackLocale"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_cacheNamespaceLoaderPromise",
              "privacy": "public",
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "promise",
                  "type": {
                    "type": "Promise.<Object>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_lookupNamespaceLoader",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "function|null"
                }
              },
              "parameters": [
                {
                  "name": "namespace",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getLangFromLocale",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string"
                }
              },
              "parameters": [
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "privacy": "public",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "type": "EventListener"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "...Object"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeEventListener",
              "privacy": "public",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "listener",
                  "type": {
                    "type": "EventListener"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "...Object"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchEvent",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "type": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onLocaleChanged",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "undefined"
                }
              },
              "parameters": [
                {
                  "name": "newLocale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "oldLocale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadAllMissing",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Promise.<Object>"
                }
              },
              "parameters": [
                {
                  "name": "newLocale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "oldLocale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getMessageForKeys",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "keys",
                  "type": {
                    "type": "string | string[]"
                  }
                },
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getMessageForKey",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "type": "string | undefined"
                  }
                },
                {
                  "name": "locale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setDatePostProcessorForLocale",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "type": "{locale:string, postProcessor:DatePostProcessor}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "setNumberPostProcessorForLocale",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "type": "{locale:string, postProcessor:NumberPostProcessor}"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalizeManager",
          "declaration": {
            "name": "LocalizeManager",
            "module": "./src/LocalizeManager.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/LocalizeMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "LocalizeMixin",
          "superclass": {
            "name": "superclass",
            "module": "./src/LocalizeMixin.js"
          },
          "members": [
            {
              "kind": "field",
              "name": "localizeNamespaces",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "waitForLocalizeNamespaces",
              "static": true,
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "performUpdate",
              "privacy": "public",
              "description": "hook into LitElement to only render once all translations are loaded",
              "return": {
                "type": {
                  "type": "Promise.<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "connectedCallback",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "disconnectedCallback",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "msgLit",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string | function"
                }
              },
              "parameters": [
                {
                  "name": "keys",
                  "type": {
                    "type": "string | string[]"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "type": "Object.<string,?>"
                  }
                },
                {
                  "name": "options",
                  "type": {
                    "type": "Object"
                  },
                  "optional": true
                },
                {
                  "name": "options.locale",
                  "type": {
                    "type": "string"
                  },
                  "optional": true
                }
              ]
            },
            {
              "kind": "method",
              "name": "__getUniqueNamespaces",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "__localizeStartLoadingNamespaces",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__localizeAddLocaleChangedListener",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__localizeRemoveLocaleChangedListener",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__localizeOnLocaleChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "type": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onLocaleReady",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "onLocaleChanged",
              "privacy": "public",
              "parameters": [
                {
                  "name": "newLocale",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "oldLocale",
                  "type": {
                    "type": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onLocaleUpdated",
              "privacy": "public"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "LocalizeMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LocalizeMixin",
          "declaration": {
            "name": "LocalizeMixin",
            "module": "./src/LocalizeMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/isLocalizeESModule.js",
      "declarations": [
        {
          "kind": "function",
          "name": "default",
          "return": {
            "type": {
              "type": "boolean"
            }
          },
          "parameters": [
            {
              "name": "obj",
              "type": {
                "type": "Object.<string, Object>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "default",
            "module": "./src/isLocalizeESModule.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/localize.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "localize",
          "description": "",
          "type": {
            "type": "LocalizeManager"
          }
        },
        {
          "kind": "function",
          "name": "setLocalize",
          "parameters": [
            {
              "name": "newLocalize",
              "type": {
                "type": "LocalizeManager"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "localize",
          "declaration": {
            "name": "localize",
            "module": "./src/localize.js"
          }
        },
        {
          "kind": "js",
          "name": "setLocalize",
          "declaration": {
            "name": "setLocalize",
            "module": "./src/localize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test/test-esmodule-default.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./test/test-esmodule-default.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-helpers/fake-imports.js",
      "declarations": [
        {
          "kind": "function",
          "name": "setupFakeImport",
          "parameters": [
            {
              "name": "path",
              "type": {
                "type": "string"
              }
            },
            {
              "name": "data",
              "type": {
                "type": "Object"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setupEmptyFakeImportsFor",
          "parameters": [
            {
              "name": "namespaces",
              "type": {
                "type": "string[]"
              }
            },
            {
              "name": "locales",
              "type": {
                "type": "string[]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resetFakeImport"
        },
        {
          "kind": "function",
          "name": "fakeImport",
          "return": {
            "type": {
              "type": "Promise.<Object>"
            }
          },
          "parameters": [
            {
              "name": "path",
              "type": {
                "type": "string"
              }
            },
            {
              "name": "ms",
              "type": {
                "type": "number"
              },
              "optional": true,
              "default": "0"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setupFakeImport",
          "declaration": {
            "name": "setupFakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "setupEmptyFakeImportsFor",
          "declaration": {
            "name": "setupEmptyFakeImportsFor",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "resetFakeImport",
          "declaration": {
            "name": "resetFakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        },
        {
          "kind": "js",
          "name": "fakeImport",
          "declaration": {
            "name": "fakeImport",
            "module": "./test-helpers/fake-imports.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test-helpers/localizeTearDown.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "localizeTearDown"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "localizeTearDown",
          "declaration": {
            "name": "localizeTearDown",
            "module": "./test-helpers/localizeTearDown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/LocalizeMixinTypes.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./types/index.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "main"
        },
        {
          "kind": "variable",
          "name": "fetchMock",
          "type": {
            "type": "any"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "main",
            "module": "./types/index.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "fetchMock",
          "declaration": {
            "name": "fetchMock",
            "module": "./types/index.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/en-AU.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/en-AU.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/en-GB.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/en-GB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/en-US.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/en-US.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/en.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/en.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/nl-BE.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/nl-BE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/nl-NL.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/nl-NL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/translations/nl.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./docs/translations/nl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/formatDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "formatDate",
          "description": "Formats date based on locale and options",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "date",
              "type": {
                "type": "Date"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatDateOptions"
              },
              "description": "Intl options are available",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatDate",
          "declaration": {
            "name": "formatDate",
            "module": "./src/date/formatDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/getDateFormatBasedOnLocale.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getDateFormatBasedOnLocale",
          "description": "To compute the localized date format",
          "return": {
            "type": {
              "type": "string"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getDateFormatBasedOnLocale",
          "declaration": {
            "name": "getDateFormatBasedOnLocale",
            "module": "./src/date/getDateFormatBasedOnLocale.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/getMonthNames.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getMonthNames",
          "return": {
            "type": {
              "type": "string[]"
            }
          },
          "parameters": [
            {
              "name": "options",
              "type": {
                "type": "Object"
              },
              "optional": true
            },
            {
              "name": "options.locale",
              "type": {
                "type": "string"
              },
              "description": "locale",
              "optional": true
            },
            {
              "name": "options.style",
              "type": {
                "type": "string"
              },
              "description": "long, short or narrow",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getMonthNames",
          "declaration": {
            "name": "getMonthNames",
            "module": "./src/date/getMonthNames.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/getWeekdayNames.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getWeekdayNames",
          "return": {
            "type": {
              "type": "string[]"
            }
          },
          "parameters": [
            {
              "name": "options",
              "type": {
                "type": "Object"
              },
              "optional": true
            },
            {
              "name": "options.locale",
              "type": {
                "type": "string"
              },
              "description": "locale",
              "optional": true
            },
            {
              "name": "options.style",
              "type": {
                "type": "string"
              },
              "description": "long, short or narrow",
              "optional": true
            },
            {
              "name": "options.firstDayOfWeek",
              "type": {
                "type": "number"
              },
              "description": "0 (Sunday), 1 (Monday), etc...",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getWeekdayNames",
          "declaration": {
            "name": "getWeekdayNames",
            "module": "./src/date/getWeekdayNames.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/normalizeDateTime.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalizeDateTime",
          "return": {
            "type": {
              "type": "Date"
            }
          },
          "parameters": [
            {
              "name": "date",
              "type": {
                "type": "Date"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalizeDateTime",
          "declaration": {
            "name": "normalizeDateTime",
            "module": "./src/date/normalizeDateTime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/parseDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "parseDate",
          "description": "To parse a date into the right format",
          "return": {
            "type": {
              "type": "Date | undefined"
            }
          },
          "parameters": [
            {
              "name": "dateString",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "parseDate",
          "declaration": {
            "name": "parseDate",
            "module": "./src/date/parseDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/formatNumber.js",
      "declarations": [
        {
          "kind": "function",
          "name": "formatNumber",
          "description": "Formats a number based on locale and options. It uses Intl for the formatting.",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "number",
              "type": {
                "type": "number"
              },
              "description": "Number to be formatted"
            },
            {
              "name": "options",
              "type": {
                "type": "FormatOptions"
              },
              "description": "Intl options are available extended by roundMode and returnIfNaN",
              "optional": true,
              "default": "({})"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatNumber",
          "declaration": {
            "name": "formatNumber",
            "module": "./src/number/formatNumber.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/formatNumberToParts.js",
      "declarations": [
        {
          "kind": "function",
          "name": "roundNumber",
          "description": "Round the number based on the options",
          "return": {
            "type": {
              "type": "number"
            }
          },
          "parameters": [
            {
              "name": "number",
              "type": {
                "type": "number"
              }
            },
            {
              "name": "roundMode",
              "type": {
                "type": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "formatNumberToParts",
          "description": "Splits a number up in parts for integer, fraction, group, literal, decimal and currency.",
          "return": {
            "type": {
              "type": "string | FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "number",
              "type": {
                "type": "number"
              },
              "description": "Number to split up"
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "description": "Intl options are available extended by roundMode,returnIfNaN",
              "optional": true,
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "roundNumber",
          "declaration": {
            "name": "roundNumber",
            "module": "./src/number/formatNumberToParts.js"
          }
        },
        {
          "kind": "js",
          "name": "formatNumberToParts",
          "declaration": {
            "name": "formatNumberToParts",
            "module": "./src/number/formatNumberToParts.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/getCurrencyName.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getCurrencyName",
          "description": "Based on number, returns currency name like 'US dollar'",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "currencyIso",
              "type": {
                "type": "string"
              },
              "description": "iso code like USD"
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "description": "Intl options are available extended by roundMode",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getCurrencyName",
          "declaration": {
            "name": "getCurrencyName",
            "module": "./src/number/getCurrencyName.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/getDecimalSeparator.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getDecimalSeparator",
          "description": "To get the decimal separator",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "locale",
              "type": {
                "type": "string"
              },
              "description": "To override the browser locale",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getDecimalSeparator",
          "declaration": {
            "name": "getDecimalSeparator",
            "module": "./src/number/getDecimalSeparator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/getFractionDigits.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getFractionDigits",
          "return": {
            "type": {
              "type": "number"
            }
          },
          "parameters": [
            {
              "name": "currency",
              "type": {
                "type": "string"
              },
              "description": "Currency code e.g. EUR",
              "optional": true,
              "default": "'EUR'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFractionDigits",
          "declaration": {
            "name": "getFractionDigits",
            "module": "./src/number/getFractionDigits.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/getGroupSeparator.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getGroupSeparator",
          "description": "Gets the group separator",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "locale",
              "type": {
                "type": "string"
              },
              "description": "To override the browser locale",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getGroupSeparator",
          "declaration": {
            "name": "getGroupSeparator",
            "module": "./src/number/getGroupSeparator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/normalizeCurrencyLabel.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalizeCurrencyLabel",
          "description": "For Turkey fixes currency label with locale options",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "currency",
              "type": {
                "type": "string"
              }
            },
            {
              "name": "locale",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalizeCurrencyLabel",
          "declaration": {
            "name": "normalizeCurrencyLabel",
            "module": "./src/number/normalizeCurrencyLabel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/getLocale.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getLocale",
          "description": "Gets the locale to use",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "locale",
              "type": {
                "type": "string"
              },
              "description": "Locale to override browser locale",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getLocale",
          "declaration": {
            "name": "getLocale",
            "module": "./src/utils/getLocale.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/addLeadingZero.js",
      "declarations": [
        {
          "kind": "function",
          "name": "addLeadingZero",
          "description": "To add a leading zero to a single number",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "dateString",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "addLeadingZero",
          "declaration": {
            "name": "addLeadingZero",
            "module": "./src/date/utils/addLeadingZero.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/clean.js",
      "declarations": [
        {
          "kind": "function",
          "name": "clean",
          "description": "To clean date from added characters from IE",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "dateAsString",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "clean",
          "declaration": {
            "name": "clean",
            "module": "./src/date/utils/clean.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/forceShortMonthNamesForEnGb.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceShortMonthNamesForEnGb",
          "parameters": [
            {
              "name": "months",
              "type": {
                "type": "string[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceShortMonthNamesForEnGb",
          "declaration": {
            "name": "forceShortMonthNamesForEnGb",
            "module": "./src/date/utils/forceShortMonthNamesForEnGb.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/normalizeIntlDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalizeIntlDate",
          "description": "To filter out some added characters in IE",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "type": "string"
              }
            },
            {
              "name": "locale",
              "type": {
                "type": "string"
              },
              "optional": true,
              "default": "''"
            },
            {
              "name": "options",
              "type": {
                "type": "FormatDateOptions"
              },
              "description": "Intl options are available",
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalizeIntlDate",
          "declaration": {
            "name": "normalizeIntlDate",
            "module": "./src/date/utils/normalizeIntlDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/pad.js",
      "declarations": [
        {
          "kind": "function",
          "name": "pad",
          "description": "To get the absolute value of a number.",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "n",
              "type": {
                "type": "string"
              },
              "description": "number in string format"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pad",
          "declaration": {
            "name": "pad",
            "module": "./src/date/utils/pad.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/sanitizedDateTimeFormat.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sanitizedDateTimeFormat",
          "description": "To sanitize a date from IE11 handling",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "date",
              "type": {
                "type": "Date"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sanitizedDateTimeFormat",
          "declaration": {
            "name": "sanitizedDateTimeFormat",
            "module": "./src/date/utils/sanitizedDateTimeFormat.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/splitDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "splitDate",
          "description": "To split a date into days, months, years, etc",
          "return": {
            "type": {
              "type": "ArrayLike.<string> | null"
            }
          },
          "parameters": [
            {
              "name": "dateAsString",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "splitDate",
          "declaration": {
            "name": "splitDate",
            "module": "./src/date/utils/splitDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/date/utils/trim.js",
      "declarations": [
        {
          "kind": "function",
          "name": "trim",
          "description": "To trim the date",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "dateAsString",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "trim",
          "declaration": {
            "name": "trim",
            "module": "./src/date/utils/trim.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/emptyStringWhenNumberNan.js",
      "declarations": [
        {
          "kind": "function",
          "name": "emptyStringWhenNumberNan",
          "description": "When number is NaN we should return an empty string or returnIfNaN param",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "returnIfNaN",
              "type": {
                "type": "string|undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "emptyStringWhenNumberNan",
          "declaration": {
            "name": "emptyStringWhenNumberNan",
            "module": "./src/number/utils/emptyStringWhenNumberNan.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalSpaces.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalSpaces",
          "return": {
            "type": {
              "type": "string"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalSpaces",
          "declaration": {
            "name": "normalSpaces",
            "module": "./src/number/utils/normalSpaces.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-get-currency-name/forceCurrencyNameForPHPEnGB.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceCurrencyNameForPHPEnGB",
          "parameters": [
            {
              "name": "currencyName",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceCurrencyNameForPHPEnGB",
          "declaration": {
            "name": "forceCurrencyNameForPHPEnGB",
            "module": "./src/number/utils/normalize-get-currency-name/forceCurrencyNameForPHPEnGB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceAddGroupSeparators.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceAddGroupSeparators",
          "description": "Add separators when they are not present",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "groupSeparator",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceAddGroupSeparators",
          "declaration": {
            "name": "forceAddGroupSeparators",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceAddGroupSeparators.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceCurrencyToEnd.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceCurrencyToEnd",
          "description": "For Dutch and Belgian amounts the currency should be at the end of the string",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceCurrencyToEnd",
          "declaration": {
            "name": "forceCurrencyToEnd",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceCurrencyToEnd.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceENAUSymbols.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceENAUSymbols",
          "description": "Change the symbols for locale 'en-AU', due to bug in Chrome",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceENAUSymbols",
          "declaration": {
            "name": "forceENAUSymbols",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceENAUSymbols.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceNormalSpaces.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceNormalSpaces",
          "description": "Parts with forced \"normal\" spaces",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceNormalSpaces",
          "declaration": {
            "name": "forceNormalSpaces",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceNormalSpaces.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceSpaceBetweenCurrencyCodeAndNumber.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceSpaceBetweenCurrencyCodeAndNumber",
          "description": "When in some locales there is no space between currency and amount it is added",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceSpaceBetweenCurrencyCodeAndNumber",
          "declaration": {
            "name": "forceSpaceBetweenCurrencyCodeAndNumber",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceSpaceBetweenCurrencyCodeAndNumber.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceSpaceInsteadOfZeroForGroup.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceSpaceInsteadOfZeroForGroup",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceSpaceInsteadOfZeroForGroup",
          "declaration": {
            "name": "forceSpaceInsteadOfZeroForGroup",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceSpaceInsteadOfZeroForGroup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceTryCurrencyCode.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceTryCurrencyCode",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceTryCurrencyCode",
          "declaration": {
            "name": "forceTryCurrencyCode",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceTryCurrencyCode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/forceYenSymbol.js",
      "declarations": [
        {
          "kind": "function",
          "name": "forceYenSymbol",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "optional": true
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "forceYenSymbol",
          "declaration": {
            "name": "forceYenSymbol",
            "module": "./src/number/utils/normalize-format-number-to-parts/forceYenSymbol.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/number/utils/normalize-format-number-to-parts/normalizeIntl.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalizeIntl",
          "description": "Normalizes function \"formatNumberToParts\"",
          "return": {
            "type": {
              "type": "FormatNumberPart[]"
            }
          },
          "parameters": [
            {
              "name": "formattedParts",
              "type": {
                "type": "FormatNumberPart[]"
              }
            },
            {
              "name": "options",
              "type": {
                "type": "FormatNumberOptions"
              },
              "default": "{}"
            },
            {
              "name": "_locale",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalizeIntl",
          "declaration": {
            "name": "normalizeIntl",
            "module": "./src/number/utils/normalize-format-number-to-parts/normalizeIntl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/10-features-overview.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/20-numbers.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/30-dates.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/40-google-translate-integration.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/50-system-overview.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/60-system-rationale.md",
      "declarations": [],
      "exports": []
    }
  ]
}
