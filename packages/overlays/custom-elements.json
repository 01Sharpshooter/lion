{
  "schemaVersion": "experimental",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "./index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "globalOverlaysStyle",
          "declaration": {
            "name": "globalOverlaysStyle",
            "module": "./src/globalOverlaysStyle.js"
          }
        },
        {
          "kind": "js",
          "name": "overlays",
          "declaration": {
            "name": "overlays",
            "module": "./src/overlays.js"
          }
        },
        {
          "kind": "js",
          "name": "setOverlays",
          "declaration": {
            "name": "setOverlays",
            "module": "./src/overlays.js"
          }
        },
        {
          "kind": "js",
          "name": "OverlaysManager",
          "declaration": {
            "name": "OverlaysManager",
            "module": "./src/OverlaysManager.js"
          }
        },
        {
          "kind": "js",
          "name": "OverlayController",
          "declaration": {
            "name": "OverlayController",
            "module": "./src/OverlayController.js"
          }
        },
        {
          "kind": "js",
          "name": "OverlayMixin",
          "declaration": {
            "name": "OverlayMixin",
            "module": "./src/OverlayMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ArrowMixin",
          "declaration": {
            "name": "ArrowMixin",
            "module": "./src/ArrowMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "withBottomSheetConfig",
          "declaration": {
            "name": "withBottomSheetConfig",
            "module": "./src/configurations/withBottomSheetConfig.js"
          }
        },
        {
          "kind": "js",
          "name": "withModalDialogConfig",
          "declaration": {
            "name": "withModalDialogConfig",
            "module": "./src/configurations/withModalDialogConfig.js"
          }
        },
        {
          "kind": "js",
          "name": "withDropdownConfig",
          "declaration": {
            "name": "withDropdownConfig",
            "module": "./src/configurations/withDropdownConfig.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/applyDemoOverlayStyles.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/demo-overlay-backdrop.js",
      "declarations": [
        {
          "kind": "class",
          "name": "DemoOverlayBackdrop",
          "superclass": {
            "name": "LitElement",
            "package": "@lion/core"
          },
          "tagName": "demo-overlay-backdrop"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "demo-overlay-backdrop",
          "declaration": {
            "name": "DemoOverlayBackdrop",
            "module": "./docs/demo-overlay-backdrop.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/demo-overlay-system.js",
      "declarations": [
        {
          "kind": "class",
          "name": "DemoOverlaySystem",
          "mixins": [
            {
              "name": "OverlayMixin",
              "module": "/src/OverlayMixin.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "@lion/core"
          },
          "members": [
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_setupOpenCloseListeners",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_teardownOpenCloseListeners",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "default": "false",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "config",
              "privacy": "public",
              "type": {
                "type": "OverlayConfig"
              },
              "default": "{}",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdateInternal",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "type": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_defineOverlay",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "OverlayController"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "DefineOverlayConfig"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "type": "PropertyValues "
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "connectedCallback",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "disconnectedCallback",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_overlayInvokerNode",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_overlayReferenceNode",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_overlayBackdropNode",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_overlayContentNode",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "field",
              "name": "_overlayContentWrapperNode",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_setupOverlayCtrl",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_teardownOverlayCtrl",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "_setOpenedWithoutPropertyEffects",
              "privacy": "public",
              "description": "When the opened state is changed by an Application Developer,cthe OverlayController is\nrequested to show/hide. It might happen that this request is not honoured\n(intercepted in before-hide for instance), so that we need to sync the controller state\nto this webcomponent again, preventing eternal loops.",
              "parameters": [
                {
                  "name": "newOpened",
                  "type": {
                    "type": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__setupSyncFromOverlayController",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__teardownSyncFromOverlayController",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "__syncToOverlayController",
              "privacy": "public",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public",
              "description": "Toggles the overlay",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "description": "Shows the overlay",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "description": "Hides the overlay",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            }
          ],
          "tagName": "demo-overlay-system",
          "attributes": [
            {
              "name": "opened",
              "fieldName": "opened",
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            }
          ],
          "events": [
            {
              "name": "opened-changed",
              "type": {
                "type": "Event"
              },
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            },
            {
              "name": "before-closed",
              "type": {
                "type": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "OverlayMixin",
                "module": "./src/OverlayMixin.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "demo-overlay-system",
          "declaration": {
            "name": "DemoOverlaySystem",
            "module": "./docs/demo-overlay-system.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/ArrowMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "ArrowMixin",
          "mixins": [
            {
              "name": "OverlayMixin",
              "module": "/src/OverlayMixin.js"
            }
          ],
          "superclass": {
            "name": "superclass",
            "module": "./src/ArrowMixin.js"
          },
          "attributes": [
            {
              "name": "has-arrow",
              "fieldName": "hasArrow"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "hasArrow",
              "privacy": "public",
              "default": "true"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_arrowNodeTemplate",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_arrowTemplate",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "public",
              "description": "Overrides arrow and keepTogether modifier to be enabled,\nand adds onCreate and onUpdate hooks to sync from popper state",
              "return": {
                "type": {
                  "type": "OverlayConfig"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getPopperArrowConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Partial<PopperOptions>"
                }
              },
              "parameters": [
                {
                  "name": "popperConfigToExtendFrom",
                  "type": {
                    "type": "Partial<PopperOptions>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupRepositionCompletePromise",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_arrowNode",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__syncFromPopperState",
              "privacy": "public",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "type": "Partial<State>"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ArrowMixinImplementation",
          "description": "",
          "type": {
            "type": "LitElement>"
          }
        },
        {
          "kind": "variable",
          "name": "ArrowMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ArrowMixinImplementation",
          "declaration": {
            "name": "ArrowMixinImplementation",
            "module": "./src/ArrowMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "ArrowMixin",
          "declaration": {
            "name": "ArrowMixin",
            "module": "./src/ArrowMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/OverlayController.js",
      "declarations": [
        {
          "kind": "class",
          "name": "OverlayController",
          "events": [
            {
              "name": "before-hide",
              "type": {
                "type": "CustomEvent"
              }
            },
            {
              "name": "show",
              "type": {
                "type": "Event"
              }
            },
            {
              "name": "before-hide",
              "type": {
                "type": "CustomEvent"
              }
            },
            {
              "name": "hide",
              "type": {
                "type": "Event"
              }
            }
          ],
          "superclass": {
            "name": "EventTargetShim",
            "package": "@lion/core"
          },
          "members": [
            {
              "kind": "field",
              "name": "invoker",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "content",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "placementMode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "invokerNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "referenceNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "contentNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "contentWrapperNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "backdropNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "elementToFocusAfterHide",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hasBackdrop",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "isBlocking",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "preventsScroll",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "trapsKeyboardFocus",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hidesOnEsc",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hidesOnOutsideClick",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "hidesOnOutsideEsc",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "inheritsReferenceWidth",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "handlesAccessibility",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "isTooltip",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "invokerRelation",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "popperConfig",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "viewportConfig",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_renderTarget",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_referenceNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "elevation",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "updateConfig",
              "privacy": "public",
              "description": "Allows to dynamically change the overlay configuration. Needed in case the\npresentation of the overlay changes depending on screen size.\nNote that this method is the only allowed way to update a configuration of an\nOverlayController instance.",
              "parameters": [
                {
                  "name": "cfgToAdd",
                  "type": {
                    "type": " OverlayConfig "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__validateConfiguration",
              "privacy": "public",
              "parameters": [
                {
                  "name": "newConfig",
                  "type": {
                    "type": "OverlayConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_init",
              "privacy": "public",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "type": "{ cfgToAdd: OverlayConfig }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__initConnectionTarget",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__initContentWrapperNode",
              "privacy": "public",
              "description": "Cleanup ._contentWrapperNode. We do this, because creating a fresh wrapper\ncan lead to problems with event listeners...",
              "parameters": [
                {
                  "name": "options",
                  "type": {
                    "type": "{ cfgToAdd: OverlayConfig }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleZIndex",
              "privacy": "public",
              "description": "Display local overlays on top of elements with no z-index that appear later in the DOM",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupTeardownAccessibility",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__storeOriginalAttrs",
              "privacy": "public",
              "parameters": [
                {
                  "name": "node",
                  "type": {
                    "type": "HTMLElement"
                  }
                },
                {
                  "name": "attrs",
                  "type": {
                    "type": "string[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__restoreOriginalAttrs",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "isShown",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "show",
              "privacy": "public",
              "parameters": [
                {
                  "name": "elementToFocusAfterHide",
                  "type": {
                    "type": "HTMLElement"
                  },
                  "default": "this.elementToFocusAfterHide"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handlePosition",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_keepBodySize",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hide",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "transitionHide",
              "privacy": "public",
              "description": "Method to be overriden by subclassers",
              "parameters": [
                {
                  "name": "hideConfig",
                  "type": {
                    "type": "{backdropNode:HTMLElement, contentNode:HTMLElement}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_transitionHide",
              "privacy": "public",
              "parameters": [
                {
                  "name": "hideConfig",
                  "type": {
                    "type": "{backdropNode:HTMLElement, contentNode:HTMLElement}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "transitionShow",
              "privacy": "public",
              "description": "To be overridden by subclassers",
              "parameters": [
                {
                  "name": "showConfig",
                  "type": {
                    "type": "{backdropNode:HTMLElement, contentNode:HTMLElement}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_transitionShow",
              "privacy": "public",
              "parameters": [
                {
                  "name": "showConfig",
                  "type": {
                    "type": "{backdropNode:HTMLElement, contentNode:HTMLElement}"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_restoreFocus",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_handleFeatures",
              "privacy": "public",
              "description": "All features are handled here.",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handlePreventsScroll",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleBlocking",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "hasActiveBackdrop",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_handleBackdrop",
              "privacy": "public",
              "description": "Sets up backdrop on the given overlay. If there was a backdrop on another element\nit is removed. Otherwise this is the first time displaying a backdrop, so a animation-in\nanimation is played.",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ animation?: boolean, phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "hasActiveTrapsKeyboardFocus",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_handleTrapsKeyboardFocus",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "enableTrapsKeyboardFocus",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "disableTrapsKeyboardFocus",
              "privacy": "public",
              "parameters": [
                {
                  "name": "{ findNewTrap = true }",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "__escKeyHandler",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ev"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleHidesOnEsc",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleHidesOnOutsideEsc",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleInheritsReferenceWidth",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_handleHidesOnOutsideClick",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleAccessibility",
              "privacy": "public",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "{ phase: OverlayPhase }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "teardown",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_teardownContentWrapperNode",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__createPopperInstance",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverlayController",
          "declaration": {
            "name": "OverlayController",
            "module": "./src/OverlayController.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/OverlayMixin.js",
      "declarations": [
        {
          "kind": "mixin",
          "name": "OverlayMixin",
          "events": [
            {
              "name": "opened-changed",
              "type": {
                "type": "Event"
              }
            },
            {
              "name": "before-closed",
              "type": {
                "type": "CustomEvent"
              }
            },
            {
              "name": "before-closed",
              "type": {
                "type": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "superclass",
            "module": "./src/OverlayMixin.js"
          },
          "attributes": [
            {
              "name": "opened",
              "fieldName": "opened"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "config",
              "privacy": "public",
              "type": {
                "type": "OverlayConfig"
              },
              "default": "{}"
            },
            {
              "kind": "method",
              "name": "requestUpdateInternal",
              "privacy": "public",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "type": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_defineOverlay",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "OverlayController"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "DefineOverlayConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "OverlayConfig"
                }
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "public",
              "parameters": [
                {
                  "name": "changedProperties",
                  "type": {
                    "type": "PropertyValues "
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setupOpenCloseListeners",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_teardownOpenCloseListeners",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "connectedCallback",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "disconnectedCallback",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_overlayInvokerNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_overlayReferenceNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_overlayBackdropNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_overlayContentNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_overlayContentWrapperNode",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_setupOverlayCtrl",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_teardownOverlayCtrl",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_setOpenedWithoutPropertyEffects",
              "privacy": "public",
              "description": "When the opened state is changed by an Application Developer,cthe OverlayController is\nrequested to show/hide. It might happen that this request is not honoured\n(intercepted in before-hide for instance), so that we need to sync the controller state\nto this webcomponent again, preventing eternal loops.",
              "parameters": [
                {
                  "name": "newOpened",
                  "type": {
                    "type": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupSyncFromOverlayController",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__teardownSyncFromOverlayController",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "__syncToOverlayController",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public",
              "description": "Toggles the overlay"
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "description": "Shows the overlay"
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "description": "Hides the overlay"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "OverlayMixinImplementation",
          "description": "",
          "type": {
            "type": "OverlayMixin"
          }
        },
        {
          "kind": "variable",
          "name": "OverlayMixin"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverlayMixinImplementation",
          "declaration": {
            "name": "OverlayMixinImplementation",
            "module": "./src/OverlayMixin.js"
          }
        },
        {
          "kind": "js",
          "name": "OverlayMixin",
          "declaration": {
            "name": "OverlayMixin",
            "module": "./src/OverlayMixin.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/OverlaysManager.js",
      "declarations": [
        {
          "kind": "class",
          "name": "OverlaysManager",
          "members": [
            {
              "kind": "method",
              "name": "__createGlobalRootNode",
              "privacy": "public",
              "static": true
            },
            {
              "kind": "method",
              "name": "__createGlobalStyleNode",
              "privacy": "public",
              "static": true
            },
            {
              "kind": "field",
              "name": "globalRootNode",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "list",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "shownList",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "public",
              "description": "Registers an overlay controller.",
              "return": {
                "type": {
                  "type": "OverlayController"
                }
              },
              "parameters": [
                {
                  "name": "ctrlToAdd",
                  "type": {
                    "type": "OverlayController"
                  },
                  "description": "controller of the newly added overlay"
                }
              ]
            },
            {
              "kind": "method",
              "name": "remove",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ctrlToRemove",
                  "type": {
                    "type": "OverlayController"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "show",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ctrlToShow",
                  "type": {
                    "type": "OverlayController"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hide",
              "privacy": "public",
              "parameters": [
                {
                  "name": "ctrlToHide",
                  "type": {
                    "type": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "teardown",
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "siblingsInert",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "disableTrapsKeyboardFocusForAll",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "informTrapsKeyboardFocusGotEnabled",
              "privacy": "public",
              "parameters": [
                {
                  "name": "placementMode",
                  "type": {
                    "type": "'local' | 'global' | undefined"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "informTrapsKeyboardFocusGotDisabled",
              "privacy": "public",
              "parameters": [
                {
                  "name": "{ disabledCtrl, findNewTrap = true }",
                  "default": "{}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "requestToPreventScroll",
              "privacy": "public",
              "description": "PreventsScroll"
            },
            {
              "kind": "method",
              "name": "requestToEnableScroll",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "requestToShowOnly",
              "privacy": "public",
              "description": "Blocking",
              "parameters": [
                {
                  "name": "blockingCtrl",
                  "type": {
                    "type": "OverlayController"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "retractRequestToShowOnly",
              "privacy": "public",
              "parameters": [
                {
                  "name": "blockingCtrl",
                  "type": {
                    "type": "OverlayController"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverlaysManager",
          "declaration": {
            "name": "OverlaysManager",
            "module": "./src/OverlaysManager.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/globalOverlaysStyle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "globalOverlaysStyle"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "globalOverlaysStyle",
          "declaration": {
            "name": "globalOverlaysStyle",
            "module": "./src/globalOverlaysStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/overlays.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "overlays"
        },
        {
          "kind": "function",
          "name": "setOverlays",
          "parameters": [
            {
              "name": "newOverlays",
              "type": {
                "type": "OverlaysManager"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "overlays",
          "declaration": {
            "name": "overlays",
            "module": "./src/overlays.js"
          }
        },
        {
          "kind": "js",
          "name": "setOverlays",
          "declaration": {
            "name": "setOverlays",
            "module": "./src/overlays.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/bg-BG.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/bg-BG.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/bg.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/bg.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/cs-CZ.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/cs-CZ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/cs.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/cs.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/de-DE.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/de-DE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/de.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/de.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/en-AU.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/en-AU.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/en-GB.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/en-GB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/en-US.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/en-US.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/en.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/en.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/es-ES.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/es-ES.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/es.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/es.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/fr-BE.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/fr-BE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/fr-FR.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/fr-FR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/fr.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/fr.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/hu-HU.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/hu-HU.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/hu.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/hu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/it-IT.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/it-IT.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/it.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/it.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/nl-BE.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/nl-BE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/nl-NL.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/nl-NL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/nl.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/nl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/pl-PL.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/pl-PL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/pl.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/pl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/ro-RO.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/ro-RO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/ro.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/ro.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/ru-RU.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/ru-RU.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/ru.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/ru.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/sk-SK.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/sk-SK.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/sk.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/sk.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/uk-UA.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/uk-UA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/uk.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/uk.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./translations/zh.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "./translations/zh.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/ArrowMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "ArrowHost",
          "members": [
            {
              "kind": "field",
              "name": "hasArrow",
              "privacy": "public",
              "type": {
                "type": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "repositionComplete",
              "privacy": "public",
              "type": {
                "type": "Promise<void>"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_arrowTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_arrowNodeTemplate",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "OverlayConfig"
                }
              }
            },
            {
              "kind": "method",
              "name": "_getPopperArrowConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "Partial<PopperOptions>"
                }
              },
              "parameters": [
                {
                  "name": "popperConfigToExtendFrom",
                  "type": {
                    "type": "Partial<PopperOptions>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupRepositionCompletePromise",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_arrowNode",
              "privacy": "public",
              "type": {
                "type": "Element | null"
              }
            },
            {
              "kind": "method",
              "name": "__syncFromPopperState",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "type": "Partial<State>"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "ArrowImplementation",
          "return": {
            "type": {
              "type": "T & Constructor<ArrowHost> & ArrowHost"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "type": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ArrowHost",
          "declaration": {
            "name": "ArrowHost",
            "module": "./types/ArrowMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "ArrowImplementation",
          "declaration": {
            "name": "ArrowImplementation",
            "module": "./types/ArrowMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./types/OverlayConfig.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./types/OverlayMixinTypes.d.ts",
      "declarations": [
        {
          "kind": "class",
          "name": "OverlayHost",
          "members": [
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "type": {
                "type": "Boolean"
              }
            },
            {
              "kind": "field",
              "name": "config",
              "privacy": "public",
              "type": {
                "type": "OverlayConfig"
              }
            },
            {
              "kind": "method",
              "name": "open",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "close",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_overlayCtrl",
              "privacy": "protected",
              "type": {
                "type": "OverlayController"
              }
            },
            {
              "kind": "field",
              "name": "_overlayInvokerNode",
              "privacy": "protected",
              "type": {
                "type": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_overlayBackdropNode",
              "privacy": "protected",
              "type": {
                "type": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_overlayContentNode",
              "privacy": "protected",
              "type": {
                "type": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_overlayContentWrapperNode",
              "privacy": "protected",
              "type": {
                "type": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "_defineOverlay",
              "privacy": "protected",
              "description": "returns an instance of a (dynamic) overlay controller\nIn case overriding _defineOverlayConfig is not enough",
              "return": {
                "type": {
                  "type": "OverlayController"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "type": "DefineOverlayConfig"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_defineOverlayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "type": "OverlayConfig"
                }
              }
            },
            {
              "kind": "method",
              "name": "_setupOpenCloseListeners",
              "privacy": "protected",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_teardownOpenCloseListeners",
              "privacy": "protected",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_setupOverlayCtrl",
              "privacy": "protected",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_teardownOverlayCtrl",
              "privacy": "protected",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_setOpenedWithoutPropertyEffects",
              "privacy": "protected",
              "description": "When the opened state is changed by an Application Developer,cthe OverlayController is\nrequested to show/hide. It might happen that this request is not honoured\n(intercepted in before-hide for instance), so that we need to sync the controller state\nto this webcomponent again, preventing eternal loops.",
              "return": {
                "type": {
                  "type": "Promise<undefined>"
                }
              },
              "parameters": [
                {
                  "name": "newOpened",
                  "type": {
                    "type": "Boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "__setupSyncFromOverlayController",
              "privacy": "private",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__teardownSyncFromOverlayController",
              "privacy": "private",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "__syncToOverlayController",
              "privacy": "private",
              "return": {
                "type": {
                  "type": "void"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "OverlayImplementation",
          "return": {
            "type": {
              "type": "T & Constructor<OverlayHost> & typeof OverlayHost"
            }
          },
          "parameters": [
            {
              "name": "superclass",
              "type": {
                "type": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OverlayHost",
          "declaration": {
            "name": "OverlayHost",
            "module": "./types/OverlayMixinTypes.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "OverlayImplementation",
          "declaration": {
            "name": "OverlayImplementation",
            "module": "./types/OverlayMixinTypes.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/directives/ref.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ref",
          "description": "will be used to store reference to attribute names like #myElement",
          "type": {
            "type": "object"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ref",
          "declaration": {
            "name": "ref",
            "module": "./docs/directives/ref.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/configurations/withBottomSheetConfig.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "withBottomSheetConfig",
          "description": "",
          "type": {
            "type": "OverlayConfig"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "withBottomSheetConfig",
          "declaration": {
            "name": "withBottomSheetConfig",
            "module": "./src/configurations/withBottomSheetConfig.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/configurations/withDropdownConfig.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "withDropdownConfig",
          "description": "",
          "type": {
            "type": "OverlayConfig"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "withDropdownConfig",
          "declaration": {
            "name": "withDropdownConfig",
            "module": "./src/configurations/withDropdownConfig.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/configurations/withModalDialogConfig.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "withModalDialogConfig",
          "description": "",
          "type": {
            "type": "OverlayConfig"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "withModalDialogConfig",
          "declaration": {
            "name": "withModalDialogConfig",
            "module": "./src/configurations/withModalDialogConfig.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/contain-focus.js",
      "declarations": [
        {
          "kind": "function",
          "name": "rotateFocus",
          "description": "Rotates focus within a list of elements. If shift key was not pressed and focus\nis on last item, puts focus on the first item. Reversed if shift key.",
          "parameters": [
            {
              "name": "rootElement",
              "type": {
                "type": "HTMLElement"
              },
              "description": "The root element"
            },
            {
              "name": "e",
              "type": {
                "type": "KeyboardEvent"
              },
              "description": "The keyboard event"
            }
          ]
        },
        {
          "kind": "function",
          "name": "containFocus",
          "description": "Contains focus within given root element. When focus is on the last focusable\nelement inside the root element, the next focus will be redirected to the first\nfocusable element.",
          "return": {
            "type": {
              "type": "{ disconnect: () => void }"
            }
          },
          "parameters": [
            {
              "name": "rootElement",
              "type": {
                "type": "HTMLElement"
              },
              "description": "The element to contain focus within"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "rotateFocus",
          "declaration": {
            "name": "rotateFocus",
            "module": "./src/utils/contain-focus.js"
          }
        },
        {
          "kind": "js",
          "name": "containFocus",
          "declaration": {
            "name": "containFocus",
            "module": "./src/utils/contain-focus.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/deep-contains.js",
      "declarations": [
        {
          "kind": "function",
          "name": "deepContains",
          "description": "Whether first element contains the second element, also goes through shadow roots",
          "return": {
            "type": {
              "type": "boolean"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "type": "HTMLElement|ShadowRoot"
              }
            },
            {
              "name": "targetEl",
              "type": {
                "type": "HTMLElement|ShadowRoot"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "deepContains",
          "declaration": {
            "name": "deepContains",
            "module": "./src/utils/deep-contains.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/get-deep-active-element.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getDeepActiveElement",
          "description": "Returns the activeElement, even when they are inside a shadowRoot.\n(If an element in a shadowRoot is focused, document.activeElement\nreturns the shadowRoot host.",
          "return": {
            "type": {
              "type": "Element"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getDeepActiveElement",
          "declaration": {
            "name": "getDeepActiveElement",
            "module": "./src/utils/get-deep-active-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/get-focusable-elements.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getFocusableElements",
          "return": {
            "type": {
              "type": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "type": "Element"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFocusableElements",
          "declaration": {
            "name": "getFocusableElements",
            "module": "./src/utils/get-focusable-elements.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/inert-siblings.js",
      "declarations": [
        {
          "kind": "function",
          "name": "setSiblingsInert",
          "description": "Makes sibling elements inert, sets the inert attribute and aria-hidden for\nscreen readers.",
          "parameters": [
            {
              "name": "element",
              "type": {
                "type": "HTMLElement"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "unsetSiblingsInert",
          "description": "Removes inert and aria-hidden attribute from sibling elements",
          "parameters": [
            {
              "name": "element",
              "type": {
                "type": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "setSiblingsInert",
          "declaration": {
            "name": "setSiblingsInert",
            "module": "./src/utils/inert-siblings.js"
          }
        },
        {
          "kind": "js",
          "name": "unsetSiblingsInert",
          "declaration": {
            "name": "unsetSiblingsInert",
            "module": "./src/utils/inert-siblings.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/is-equal-config.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isEqualConfig",
          "description": "Compares two OverlayConfigs to equivalence. Intended to prevent unnecessary resets.\nNote that it doesn't cover as many use cases as common implementations, such as Lodash isEqual.",
          "return": {
            "type": {
              "type": "boolean"
            }
          },
          "parameters": [
            {
              "name": "a",
              "type": {
                "type": "Partial<OverlayConfig>"
              }
            },
            {
              "name": "b",
              "type": {
                "type": "Partial<OverlayConfig>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isEqualConfig",
          "declaration": {
            "name": "isEqualConfig",
            "module": "./src/utils/is-equal-config.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/is-visible.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isVisible",
          "return": {
            "type": {
              "type": "boolean"
            }
          },
          "parameters": [
            {
              "name": "element",
              "type": {
                "type": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isVisible",
          "declaration": {
            "name": "isVisible",
            "module": "./src/utils/is-visible.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/key-codes.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "keyCodes"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "keyCodes",
          "declaration": {
            "name": "keyCodes",
            "module": "./src/utils/key-codes.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/simulate-tab.js",
      "declarations": [
        {
          "kind": "function",
          "name": "simulateTab",
          "parameters": [
            {
              "name": "node",
              "default": "document.body"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "simulateTab",
          "declaration": {
            "name": "simulateTab",
            "module": "./src/utils/simulate-tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./src/utils/sort-by-tabindex.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sortByTabIndex",
          "return": {
            "type": {
              "type": "HTMLElement[]"
            }
          },
          "parameters": [
            {
              "name": "elements",
              "type": {
                "type": "HTMLElement[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sortByTabIndex",
          "declaration": {
            "name": "sortByTabIndex",
            "module": "./src/utils/sort-by-tabindex.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./test/utils-tests/local-positioning-helpers.js",
      "declarations": [
        {
          "kind": "function",
          "name": "normalizeTransformStyle",
          "parameters": [
            {
              "name": "cssValue",
              "type": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "normalizeTransformStyle",
          "declaration": {
            "name": "normalizeTransformStyle",
            "module": "./test/utils-tests/local-positioning-helpers.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "./docs/20-index.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/30-system-rationale.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/40-system-configuration.md",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "./docs/OverlaySystemScope.md",
      "declarations": [],
      "exports": []
    }
  ]
}
